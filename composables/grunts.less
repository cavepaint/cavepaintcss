// grunts
// useful classes that usually do one thing but are nonetheless composable

.padding { padding: var(--padding);}
.margin { margin: var(--margin);}
.gutter { margin: var(--gutter);}
.text-padding { padding: var(--text-padding);}
.text-margin { margin: var(--text-padding);}

.padding-top { padding-top: var(--padding);}
.padding-right { padding-right: var(--padding);}
.padding-bottom { padding-bottom: var(--padding);}
.padding-left { padding-left: var(--padding);}

.margin-top { margin-top: var(--margin);}
.margin-right { margin-right: var(--margin);}
.margin-bottom { margin-bottom: var(--margin);}
.margin-left { margin-left: var(--margin);}

.gutter-top { margin-top: var(--gutter);}
.gutter-right { margin-right: var(--gutter);}
.gutter-bottom { margin-bottom: var(--gutter);}
.gutter-left { margin-left: var(--gutter);}

.text-padding-top { padding-top: var(--text-padding);}
.text-padding-right { padding-right: var(--text-padding);}
.text-padding-bottom { padding-bottom: var(--text-padding);}
.text-padding-left { padding-left: var(--text-padding);}

.text-margin-top { margin-top: var(--text-padding);}
.text-margin-right { margin-right: var(--text-padding);}
.text-margin-bottom { margin-bottom: var(--text-padding);}
.text-margin-left { margin-left: var(--text-padding);}

.text-border-radius { border-radius: var(--text-padding);}

.bar {
  top: 0;
  right: 0;
  left: 0;

  &.bottom {
    top: auto;
    bottom: 0;
  }
}

.block {
  display: block;
}

.inline {
  display: inline;
}

.inline-all, .inline-all * {
  display: inline;
}

.inline-break::after {
  content: "\A";
  white-space: pre;
}

.initial {
  display: initial;
}

.table {
  display: table;
}

.flex {
  display: flex;
}

.inline-block {
  display: inline-block;
}

.static {
  position: static;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.fixed {
  position: fixed;
}

.float-right {
  float: right;
}

.float-left {
  float: left;
}

.margin-auto {
  margin-left: auto !important;
  margin-right: auto !important;
}

.width-auto {
  width: auto;
}

.inset {
  box-shadow: inset var(--box-shadow);
}

.box-shadow {
  box-shadow: var(--box-shadow);
}

.shadow {
  &:extend(.box-shadow all);
}

.shallow {
  --shadow-position: .5px;
  --box-shadow: var(--shadow-position) var(--shadow-position) var(--shadow-blur) var(--shadow-color);
}

.deep {
  --shadow-position: 2px;
  --box-shadow: var(--shadow-position) var(--shadow-position) var(--shadow-blur) var(--shadow-color);
}

.viewport-height {
  min-height: 100vh;

  &.force {
    height: 100vh;
  }
}

.overflow-scroll {
  overflow-y: auto;
}

.overflow-hidden {
  overflow: hidden;
}

.border {
  border: var(--border);
}

.border-top {
  border-top: var(--border);
}

.border-right {
  border-right: var(--border);
}

.border-bottom {
  border-bottom: var(--border);
}

.border-left {
  border-left: var(--border);
}

.border-radius, .rounded {
  border-radius: @border-radius;
}

.dashed {
  border-style: dashed;
}

.dotted {
  border-style: dotted;
}

.thick {
  border-width: var(--border-thick);
}

.thin {
  border-width: var(--border-thin);
}

.current-color {
  border-color: currentColor;
}

.fade {
  opacity: .65;
}

.monospace when (@font-family = @font-family-monospace) {
  &:extend(.font-family);
}

.monospace when not (@font-family = @font-family-monospace) {
  font-family: var(--monospace);
}

.serif when (@font-family = @font-family-serif) {
  &:extend(.font-family);
}

.serif when not (@font-family = @font-family-serif) {
  font-family: var(--serif);
}

.sans-serif when (@font-family = @font-family-sans-serif) {
  &:extend(.font-family);
}

.sans-serif when not (@font-family = @font-family-sans-serif) {
  font-family: var(--sans-serif);
}

.bold {
  font-weight: bold;
}

.all-caps {
  text-transform: uppercase;
}

.underline {
  text-decoration: underline;
}

.text-transparent {
  color: transparent;
}

.small {
  font-size: 87.5%;
  line-height: @line-height*.875;
}

.medium {
  font-size: var(--font-size);
  line-height: var(--line-height);
}

.big {
  font-size: 125%;
  line-height: @line-height*1.25;
}

.huge {
  font-size: 160%;

  &.font-size {
    font-size: 1.6*@font-size;
  }
}

.vertical-center, .center-vertical {
  &:extend(.flex);
  &:extend(.flex-direction);
  &:extend(.justify-content);
}

.container {
  max-width: var(--page-width);
  margin: var(--margin) auto;
  padding: var(--padding);
}

.text-trim {
  line-height: 1;
}

.text-align-center, .text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.grid-gap-padding {
  --grid-gap: var(--padding);
}

.grid-gap-margin {
  --grid-gap: var(--margin);
}

.grid-gap-gutter {
  --grid-gap: var(--gutter);
}

.grid-gap-border-width {
  --grid-gap: var(--border-width);
}

.grid-gap-text-padding, .grid-gap-text-margin {
  --grid-gap: var(--text-padding);
}

.shade {
  color: @black;
  background-color: hsl(var(--h), var(--s), var(--l));
  border-color: hsl(var(--border-h), var(--border-s), var(--border-l));
  --border-h: var(--h);
  --border-s: var(--s);
  --border-l: calc(var(--l) * .4);
}

.tint {
  color: @white;
  background-color: hsl(var(--h), var(--s), var(--l));
  border-color: hsl(var(--border-h), var(--border-s), var(--border-l));
  --border-h: var(--h);
  --border-s: var(--s);
  --border-l: calc(var(--l) * .4);
}

.transparent {
  background-color: transparent !important;
  color: inherit;
  border-color: inherit;

  @light-fill-opacity: .85;
  @dark-fill-opacity: .65;

  &.light {
    --light: rgba(red(@white), green(@white), blue(@white), @light-fill-opacity);
    background-image: linear-gradient(var(--light), var(--light));
    &:extend(.shade);
  }

  &.dark {
    --dark: rgba(red(@black), green(@black), blue(@black), @dark-fill-opacity);
    background-image: linear-gradient(var(--dark), var(--dark));
    &:extend(.tint);
  }
}

.trim {
  margin-bottom: 0;
}

.trim-inner {
  * {
    &:extend(.trim);
  }
}

.trim-all {
  &:extend(.trim);

  * {
    &:extend(.trim);
  }
}

.flatten {
  &:extend(.no-shadows);

  * {
    &:extend(.no-shadows);
  }
}

.bump {
  position: relative;

  &.up {
    top: -2px;
  }

  &.down {
    top: 2px;
  }

  &.left {
    left: -2px;
  }

  &.right {
    right: initial;
    left: 2px;
  }
}

.hidden { display: none !important;}

.clearfix, .clear {
  clear: both;
  &::after {
    display: block;
    clear: both;
    content: "";
  }
}

.user-background {
  .white;
}

@media (prefers-color-scheme: dark) {
  .user-background {
      .black;
  }
} 

.align-content {
  align-content: stretch;
}
.align-items {
  align-items: stretch;
}
.align-self {
  align-self: auto;
}
.flex {
  flex: 0 1 auto;
}
.flex-direction {
  flex-direction: column;
}
.justify-content {
  justify-content: center;
}
.font-family {
  font-family: var(--font-family);
}
.font-size {
  font-size: var(--font-size);
}
.list-style {
  list-style: disc inside none;
}
.list-style-type {
  list-style-type: disc;
}
.text-indent {
  text-indent: 2ch;
}
.text-justify {
  text-justify: justify;
}
.text-overflow {
  text-overflow: ellipsis;
}
.text-shadow {
  text-shadow: @text-shadow;
}
.line-height {
  line-height: var(--line-height);
}
.vertical-align {
  vertical-align: middle;
}
.letter-spacing {
  letter-spacing: 0;
}
.word-spacing {
  word-spacing: normal;
}
.white-space {
  white-space: nowrap;
}
.word-break {
  word-break: break-all;
}
.word-wrap {
  word-wrap: break-word;
}
.transform {
  transform: none;
}
.transition {
  transition: all 0s ease 0s;
}
.display {
  display: block;
}
.position {
  position: absolute;
}
.top {
  top: 0;
}
.right {
  right: 0;
}
.bottom {
  bottom: 0;
}
.left {
  left: 0;
}
.float {
  float: left;
}
.clear {
  clear: both;
}
.z-index {
  z-index: 10;
}
.overflow {
  overflow: hidden;
}
.cursor {
  cursor: pointer;
}