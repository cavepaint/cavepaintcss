// accent and all other color wheel colors

// very gray colors get a fake rep color for their wheel spins
.set-rep-color() when (saturation(@base-color) < 5%) {
    @rep-color: .set-lumafix(tan, @strength: 50%)[];
}

.set-rep-color() when (default()) {
    @rep-color: @base-color;
}

@rep-color: .set-rep-color()[];

// set up the variables
// all of the color wheel colors are created through lumafixing/spinning


@accent-str: 80%;
@accent-base: .set-lumafix(spin(@rep-color, 30), @ambient, 100%)[];
@accent: .set-color(accent, @accent-base, 0, .9)[];
@inverted-accent-base: .set-lumafix(spin(@rep-color, -30), @ambient, 100%)[];
@inverted-accent: .set-color(accent, @inverted-accent-base, 0, .9)[];

@complement-base: .set-lumafix(spin(@rep-color, 180), @rep-color, @accent-str)[];
@complement: .set-color(complement, @complement-base, 1/2, .9)[];

@split-base: .set-lumafix(spin(@rep-color, 90), @rep-color, @accent-str)[];
@split: .set-color(split, @split-base, 1/2, .9)[];

@inverted-split-base: .set-lumafix(spin(@rep-color, -90), @rep-color, @accent-str)[];
@inverted-split: .set-color(inverted-split, @inverted-split-base, 1/2, .9)[];

@tetrad-base: .set-lumafix(spin(@rep-color, 45), @rep-color, @accent-str)[];
@tetrad: .set-color(tetrad, @tetrad-base, 1/2, .9)[];

@second-tetrad-base: .set-lumafix(spin(@rep-color, 135), @rep-color, @accent-str)[];
@second-tetrad: .set-color(second-tetrad, @second-tetrad-base, 1/2, .9)[];

@third-tetrad-base: .set-lumafix(spin(@rep-color, -135), @rep-color, @accent-str)[];
@third-tetrad: .set-color(third-tetrad, @third-tetrad-base, 1/2, .9)[];

@fourth-tetrad-base: .set-lumafix(spin(@rep-color, -45), @rep-color, @accent-str)[];
@fourth-tetrad: .set-color(fourth-tetrad, @fourth-tetrad-base, 1/2, .9)[];

@triad-base: .set-lumafix(spin(@rep-color, 60), @rep-color, @accent-str)[];
@triad: .set-color(triad, @triad-base, 1/2, .9)[];

// second triad is the same thing as complement
// @second-triad-base: .set-lumafix(spin(@rep-color, 180), @rep-color, @accent-str)[];
// @second-triad: .set-color(second-triad, @second-triad-base, 1/2, .9)[];

@third-triad-base: .set-lumafix(spin(@rep-color, -60), @rep-color, @accent-str)[];
@third-triad: .set-color(third-triad, @third-triad-base, 1/2, .9)[];

// set up the actual CSS output

.complement {
    .color-helpers(@complement);
}

.accent {
    .color-helpers(@accent);
}

.second.accent {
    .color-helpers(@inverted-accent);
}

.split {
    .color-helpers(@split);
}

.second.split {
    .color-helpers(@inverted-split);
}

.triad {
    .color-helpers(@triad);
}

.second.triad {
    &:extend(.complement all);
}

.third.triad {
    .color-helpers(@third-triad);
}

.tetrad {
    .color-helpers(@tetrad);
}

.second.tetrad {
    .color-helpers(@second-tetrad);
}

.third.tetrad {
    .color-helpers(@third-tetrad);
}

.fourth.tetrad {
    .color-helpers(@fourth-tetrad);
}